package com.collection.class27.HW;

public class HW {

    /*
    1.
    Создать интерфейс 'Shape' с неопределенными методами как calculateArea и calculatePerimiter.
- Создайте 2 класса Circle и Square, реализующие функциональность, определенную в интерфейсе Shape.
  Протестируйте свой код.
2. Необходимо вычислить среднее значение оценок, полученных в трех предметах студентом A и студентом B.
Создайте класс 'Marks' с абстрактным методом 'getPercentage', который будет возвращать средний процент оценок.
Обеспечить реализацию абстрактного метода в классах 'A' и 'B'.
Конструктор студента A принимает в качестве параметров оценки по трем предметам, а для студента B - оценки по четырем предметам.
Протестируйте свой код
     */

    /*
    Создайте класс Car, который будет иметь следующие поля: caPrice и color и метод calculateSalePrice),
    который должен возвращать цену автомобиля.
Создайте 2 подкласса: Sedan и Truck.
Класс Truck имеет поле weight и собственную реализацию метода calculateSalePrice(),
 в котором возвращаемая цена рассчитывается следующим образом: если weight>2000,
 то возвращаемая цена автомобиля должна включать скидку 10%, в противном случае - 20%.
Класс Sedan имеет поле length и также имеет собственную реализацию метода calculateSalePrice():
если длина седана >20 футов, то возвращаемая цена автомобиля должна включать скидку 5%, иначе 10%.
5% скидки, иначе 10% скидки
     */

    /*
    1. Создать класс Registration, в котором будут находиться переменные email, userName и password,
    имеющие область доступа только в пределах своего класса. После создания объекта класса пользователь
    должен иметь возможность вызывать методы и в каждом методе отдельно передавать значения для установки e-mail,
    имени пользователя и пароля.

    Требования:
A. Действительный e-mail должен быть только yahoo
B. Валидные имя пользователя и пароль не могут быть пустыми и должны иметь длину более 6 символов.
Также пароль не может содержать имя пользователя.
     */
}
